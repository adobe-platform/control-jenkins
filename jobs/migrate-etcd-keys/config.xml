<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Given a list of space delimited keys ($DIRS), this job will recursively get all values from $OLDKV and set them in this cluster.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>OLDKV</name>
          <description>Source etcdctl server (ETCD_PEERS endpoint works). Including port.</description>
          <defaultValue>${RUNNING_HOST}:2379</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.TextParameterDefinition>
          <name>DIRS</name>
          <description>Space delimited list of keys. Default keys are for mantra migrations.</description>
          <defaultValue>/mantra/pools</defaultValue>
        </hudson.model.TextParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>DRY_RUN</name>
          <description>Whether to just output the commands or actually run them.</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

eval ${SETUPKEYS}

PEERS=$(eval &quot;${SSHCMD} &apos;curl -sS ${OLDKV}/v2/machines|tr -d [:space:]&apos;&quot;)

for key in $DIRS; do
    subkeys=$(eval &quot;${SSHCMD} &apos;etcdctl --peers=${PEERS} ls ${key} --recursive&apos;&quot;)
    for subkey in $subkeys; do
        value=$(eval &quot;${SSHCMD} &apos;etcdctl --peers=${PEERS} get ${subkey}&apos; 2&gt; /dev/null&quot;)
        if [ $? != 0 ]; then
            continue
        fi

		echo &quot;etcdctl set ${subkey} &apos;${value}&apos;&quot;
        if [ $DRY_RUN != &quot;true&quot; ]; then
            eval &quot;${SSHCMD} etcdctl set ${subkey} \&apos;${value}\&apos;&quot;
        fi
    done
done</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>