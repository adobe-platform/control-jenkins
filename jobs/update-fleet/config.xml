<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># ensure that the SSH is usable in the container
cp ${JENKINS_HOME}/.ssh/id_rsa  ${JENKINS_HOME}/.ssh/id_rsa &amp;&amp; chmod 0600 ${JENKINS_HOME}/.ssh/id_rsa

# clone, cache &amp; figure out what units changed, if possible
CLONED=$(git clone ${FLEET_REPO} fleetunits)
CHANGED_UNITS=$(ls fleetunits)
if [ ${CLONED} != 0 ]; then
    CHANGED_UNITS=$(cd fleetunits &amp;&amp; git diff origin/master --name-only)
    cd fleetunits &amp;&amp; git pull &amp;&amp; cd -
fi

# remote dir
UNIT_DIR=&quot;/home/${RUNNING_USER}/fleet_units&quot;

# ensure that the remote fleet units repo is setup
ssh ${RUNNING_USER}@${RUNNING_HOST} &quot;(git clone ${FLEET_REPO} ${UNIT_DIR}) || (cd ${UNIT_DIR} &amp;&amp; git pull)&quot;

for SERVICE in ${CHANGED_UNITS} do
    ssh ${RUNNING_USER}@${RUNNING_HOST} &quot;fleetctl destroy ${SERVICE}&quot;
    ssh ${RUNNING_USER}@${RUNNING_HOST} &quot;fleetctl submit ${UNITDIR}/${SERVICE}&quot;
    ssh ${RUNNING_USER}@${RUNNING_HOST} &quot;fleetctl start ${SERVICE}&quot;
done</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>